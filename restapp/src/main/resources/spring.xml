<?xml version="1.0" encoding="UTF-8"?>
<beans default-autowire="byName" xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd"
        >
    <context:annotation-config/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <context:property-placeholder location="classpath:application.properties"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
          p:dataSource-ref="dataSource">
        <property name="packagesToScan">
            <list>
                <value>com.wind.restapp.*.domain</value>
                <!--<value>com.wind.samplele.sbgbusiness.domain</value>-->
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${db.hibernate.dialect}</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
                <prop key="hibernate.cache.provider_configuration_file_resource_path">/ehcache.xml</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cglib.use_reflection_optimizer">false</prop>
                <prop key="hibernate.default_batch_fetch_size">50</prop>
                <prop key="hibernate.autoReconnect">true</prop>
                <prop key="hibernate.failOverReadOnly">false</prop>
                <prop key="hibernate.jdbc.use_scrollable_resultset">true</prop>
                <prop key="hibernate.useUnicode">true</prop>
                <prop key="hibernate.characterEncoding">UTF-8</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">${db.enable.hibernate.sql.log}</prop>
                <prop key="hibernate.format_sql">${db.enable.hibernate.sql.format}</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
          p:dataSource-ref="dataSource" p:sessionFactory-ref="sessionFactory">
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean name="beanFactory" class="jetwang.framework.spring.BeanFactory"/>
    <bean id="dataAccess" class="jetwang.framework.db.DataAccess" p:sessionFactory-ref="sessionFactory"
          p:dataSource-ref="dataSource"/>

    <context:component-scan base-package="jetwang.framework.log.**"/>

    <aop:config>
        <aop:aspect id="myAspect" ref="beanLogger">
            <aop:around method="log" pointcut="${bean.logging.pointcut}"/>
        </aop:aspect>
    </aop:config>

    <context:component-scan base-package="com.wind.restapp.*.manager.**"/>
    <context:component-scan base-package="com.wind.restapp.*.dao.**"/>

    <context:component-scan base-package="jetwang.framework.webservice.**"/>
    <context:component-scan base-package="com.wind.restapp.*.restws.**"/>
</beans>

